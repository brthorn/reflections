How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It helped tremendously, since I didn't have to manually look at thousands of lines of code for hours.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
	
	If a programmer changes their code and introduces a bug, it will help determine what the cause of the bug could be. 
	Also, it can save the time of the programmer.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git,
vs having versions automatically saved, like Google Docs does?

	When manually committing, each commit will be meaningful to the programmer, instead of randomly generated. 
	The con would be user based, as the user may forget to commit. When automatically saving such as Docs, 
	There will always be commits and changes will be saved, but they may be incomplete code or not meaningful.
	
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, 
like Google Docs, treat each file separately?	

	The user base of each program is different. Programmers are more likely to use git, where they change multiple files
	at once, while Docs is used by casual users as well.

How can you use the commands git log and git diff to view the history of files?
	
	git log gives you the commits and their id, with a description of each change, while git diff shows you the 
	difference within the code.

How might using version control make you more confident to make changes that could break something?

		very confident, because it means that we can make errors without worrying about not being able to fix them.
		
Now that you have your workspace set up, what do you want to try using Git for?	

	I want to be unafraid to make huge changes in code, while also working on a bigger project.